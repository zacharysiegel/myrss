# Build stage
FROM rust:1.82 AS builder

WORKDIR /app

# Copy workspace files
COPY Cargo.toml ./
COPY myrss-secrets/Cargo.toml ./myrss-secrets/
COPY myrss-server/Cargo.toml ./myrss-server/
COPY myrss-auth/Cargo.toml ./myrss-auth/

# Create dummy files to cache dependencies
RUN mkdir -p myrss-secrets/src myrss-server/src myrss-auth/src && \
    echo "fn main() {}" > myrss-secrets/src/main.rs && \
    echo "fn main() {}" > myrss-server/src/main.rs && \
    echo "fn main() {}" > myrss-auth/src/main.rs && \
    echo "pub struct SecretsReader; impl SecretsReader { pub fn new<P>(_: P, _: String) -> anyhow::Result<Self> { unimplemented!() } pub fn get(&self, _: &str) -> anyhow::Result<String> { unimplemented!() } }" > myrss-secrets/src/lib.rs

# Build dependencies
RUN cargo build --release -p myrss-auth

# Copy actual source code
COPY myrss-secrets/src ./myrss-secrets/src
COPY myrss-auth/src ./myrss-auth/src

# Rebuild everything with real source code
RUN touch myrss-secrets/src/lib.rs && \
    touch myrss-auth/src/main.rs && \
    cargo build --release -p myrss-auth

# Runtime stage
FROM debian:bookworm-slim

RUN apt-get update && apt-get install -y \
    ca-certificates \
    libssl3 \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy the binary
COPY --from=builder /app/target/release/myrss-auth /app/

EXPOSE 8081

CMD ["./myrss-auth"]